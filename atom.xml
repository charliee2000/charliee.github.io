<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Charlie&#39;s Coding Blog</title>
  
  <subtitle>這是副標題</subtitle>
  <link href="https://charliee2000.github.io/atom.xml" rel="self"/>
  
  <link href="https://charliee2000.github.io/"/>
  <updated>2022-09-14T17:20:24.460Z</updated>
  <id>https://charliee2000.github.io/</id>
  
  <author>
    <name>Charlie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[VPN] How to create an openvpn server with tp-link router on windows os and connect to smb server with your device</title>
    <link href="https://charliee2000.github.io/2022/09/14/20220914/"/>
    <id>https://charliee2000.github.io/2022/09/14/20220914/</id>
    <published>2022-09-14T13:03:52.000Z</published>
    <updated>2022-09-14T17:20:24.460Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章是記錄如何搭建<code>VPN Server</code>並透過<code>SMB連線</code>的方式存取電腦中的檔案</p><p>非專業教學文，若有錯誤請留言告知，謝謝</p><br><span id="more"></span><h2 id="環境需求"><a href="#環境需求" class="headerlink" title="環境需求"></a><strong>環境需求</strong></h2><br><h3 id="OS"><a href="#OS" class="headerlink" title="OS"></a><strong>OS</strong></h3><ul><li>Windows10</li></ul><h3 id="VPN軟體"><a href="#VPN軟體" class="headerlink" title="VPN軟體"></a><strong>VPN軟體</strong></h3><ul><li>OpenVPN</li></ul><h3 id="硬體"><a href="#硬體" class="headerlink" title="硬體"></a><strong>硬體</strong></h3><ul><li>TP-Link router一台</li><li>任意可以聯網的裝置一台 (ex: iphone)</li></ul><hr><h2 id="OpenVPN教學"><a href="#OpenVPN教學" class="headerlink" title="OpenVPN教學"></a><strong>OpenVPN教學</strong></h2><br><h3 id="進入路由器後台"><a href="#進入路由器後台" class="headerlink" title="進入路由器後台"></a><strong>進入路由器後台</strong></h3><p>首先，先在瀏覽器上輸入網址</p><p>192.168.0.1</p><p>一般來說都是這個，如果要check的話可以透過Terminal下指令來取得</p><br><h3 id="取得區域網路IP位置"><a href="#取得區域網路IP位置" class="headerlink" title="取得區域網路IP位置"></a><strong>取得區域網路IP位置</strong></h3><br><h4 id="Windows-Win-R-然後輸入-cmd-即可開啟Termial"><a href="#Windows-Win-R-然後輸入-cmd-即可開啟Termial" class="headerlink" title="Windows (Win + R, 然後輸入 cmd, 即可開啟Termial)"></a><strong>Windows</strong> (Win + R, 然後輸入 cmd, 即可開啟Termial)</h4><pre><code>ipconfig</code></pre><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a><strong>Mac</strong></h4><pre><code>ifconfig</code></pre><br><p><img src="/images/2022/image-20220914212147282.png" alt="image-20220914212147282"></p><p>主要是看<code>預設閘道</code>的位置</p><br><p><img src="/images/2022/image-20220914212228565.png" alt="image-20220914212228565"></p><p>輸入網址後會看到路由器的登入介面</p><p>輸入你設定好的密碼</p><br><h3 id="Router開啟OpenVPN"><a href="#Router開啟OpenVPN" class="headerlink" title="Router開啟OpenVPN"></a><strong>Router開啟OpenVPN</strong></h3><p>Advanced -&gt; VPN Server -&gt; OpenVPN</p><p><img src="/images/2022/image-20220914212953504.png" alt="image-20220914212953504"></p><ul><li>OpenVPN Enable <strong>等產生完憑證再打勾</strong></li><li>Service Type選擇 <code>UDP</code></li><li>Service Port 預設<strong>1194</strong>即可</li><li>VPN Subnet 預設就好 不用更改</li><li>Netmask 預設就好 不用更改</li><li>Client Access    <strong><code>Home Network Only</code></strong></li></ul><p>設定好之後先產生憑證，點擊 GENERATE</p><p>大概會需要幾分鐘的時間</p><p>之後點擊 EXPORT 匯出</p><p>匯出之後會得到一個 <code>OpenVPN-Config.ovpn</code>檔案</p><p>請妥善保存，這個是連線到你OpenVPN的鑰匙，不要任意外流</p><p>然後按Save保存</p><br><h3 id="檢查-OpenVPN-Config-ovpn"><a href="#檢查-OpenVPN-Config-ovpn" class="headerlink" title="檢查 OpenVPN-Config.ovpn"></a><strong>檢查 OpenVPN-Config.ovpn</strong></h3><p>使用文本編輯器打開該檔案，要確認一下內容是否正確</p><p><img src="/images/2022/image-20220914213813124.png" alt="image-20220914213813124"></p><p>確認一下你家的IP位置是否正確</p><p>可以透過以下網址來查詢你家的IP位置</p><p><a href="https://nordvpn.com/zh-tw/ip-lookup/">https://nordvpn.com/zh-tw/ip-lookup/</a></p><p><strong>如果不正確，請把IP位置修正</strong></p><br><h3 id="開啟Port-Forwarding"><a href="#開啟Port-Forwarding" class="headerlink" title="開啟Port Forwarding"></a><strong>開啟Port Forwarding</strong></h3><p>Advanced -&gt; NAT Forwarding -&gt; Port Forwarding</p><p>新增一個 <code>Forwarding Port</code> 點 Add</p><img src="/images/2022/image-20220914214338386.png" alt="image-20220914214338386" style="zoom:80%;" /><ul><li>Service Name 隨意打 (ex : VPN伺服器)</li><li>Device IP Address <strong><code>IPv4的IP位置</code></strong><ul><li><a href="#取得區域網路IP位置" class="node-name--H3">取得區域網路IP位置</a> </li><li>也可以點 <code>VIEW CONNECTED DEVICES</code> 按鈕，會列出目前有連線的IP位置</li></ul></li><li>External Port 輸入<strong>1194</strong></li><li>Internal Port 輸入 <strong>1194</strong></li><li>Protocol <strong><code>All</code></strong></li></ul><p>完成之後按Save即可</p><p><strong>注意！！如果你家是兩台 一台數據機+一台WIFI分享的路由器</strong></p><p><strong>那你必須兩台都把Forwarding port都設定過才行</strong></p><br><br><h3 id="Windows安裝OpenVPN-Server"><a href="#Windows安裝OpenVPN-Server" class="headerlink" title="Windows安裝OpenVPN Server"></a><strong>Windows安裝OpenVPN Server</strong></h3><br><p>從以下網址下載OpenVPN Server的安裝檔</p><p><a href="https://openvpn.net/community-downloads/">https://openvpn.net/community-downloads/</a></p><br><p>安裝完成之後啟動</p><p><img src="/images/2022/image-20220914215843135.png" alt="image-20220914215843135"></p><p>可以在右下角看到OpenVPN的圖示</p><br><h4 id="匯入openvpn設定檔"><a href="#匯入openvpn設定檔" class="headerlink" title="匯入openvpn設定檔"></a><strong>匯入openvpn設定檔</strong></h4><p><img src="/images/2022/image-20220914220137521.png" alt="image-20220914220137521"></p><p>對OpenVPN的圖示 點右鍵 -&gt; 匯入設定檔</p><p>還記得剛剛下載的 <code>OpenVPN-Config.ovpn</code></p><p>找到該檔案後把他匯入進去</p><br><h3 id="連線至OpenVPN"><a href="#連線至OpenVPN" class="headerlink" title="連線至OpenVPN"></a><strong>連線至OpenVPN</strong></h3><p><img src="/images/2022/image-20220914220332839.png" alt="image-20220914220332839"></p><p>一樣點選圖示 按右鍵 -&gt; 點<code>連線</code></p><br><img src="/images/2022/image-20220914220505730.png" alt="image-20220914220505730" style="zoom:50%;" /><p>成功的話會跳出連線成功的通知</p><br><h3 id="使用裝置連線至VPN-Server"><a href="#使用裝置連線至VPN-Server" class="headerlink" title="使用裝置連線至VPN Server"></a><strong>使用裝置連線至VPN Server</strong></h3><p>到這邊為止 OpenVPN已經架設完成了</p><p>接著要用可以聯網的裝置連線至VPN Server</p><p>這邊使用的是iphone11</p><img src="/images/2022/IMG_423FAC95ABA6-1.jpeg" alt="IMG_423FAC95ABA6-1" style="zoom:50%;" /><p>先下載OpenVPN的APP (也有windows版跟mac版)</p><br><img src="/images/2022/IMG_BC307EA37432-1.jpeg" alt="IMG_BC307EA37432-1" style="zoom:50%;" /><p>開啟OpenVPN</p><p>按下 + 新增一個VPN位置，這邊選擇右邊的 <code>FILE</code></p><p>一樣，這裡需要匯入 <code>OpenVPN-Config.ovpn</code></p><p><strong>可以透過email寄送到自己的信箱在取出來匯入即可</strong></p><br><h3 id="連線至VPN-Server"><a href="#連線至VPN-Server" class="headerlink" title="連線至VPN_Server"></a><strong>連線至VPN_Server</strong></h3><img src="/images/2022/image-20220914221419314.png" alt="image-20220914221419314" style="zoom:50%;" /><p>然後打開開關，成功的話則會顯示 CONNECTED</p><br><hr><h2 id="Windows設置SMB-網路的芳鄰"><a href="#Windows設置SMB-網路的芳鄰" class="headerlink" title="Windows設置SMB(網路的芳鄰)"></a><strong>Windows設置SMB(網路的芳鄰)</strong></h2><br><h3 id="選擇共享資料夾"><a href="#選擇共享資料夾" class="headerlink" title="選擇共享資料夾"></a><strong>選擇共享資料夾</strong></h3><br><p>選擇你要共享的資料夾</p><img src="/images/2022/image-20220914221839656.png" alt="image-20220914221839656" style="zoom:50%;" /><p>點右鍵 -&gt; 內容 -&gt; 共用 -&gt; 共用</p><br><p><img src="/images/2022/image-20220914221932028.png" alt="image-20220914221932028"></p><p>然後選擇共用即可</p><br><p><img src="/images/2022/image-20220914222114541.png" alt="image-20220914222114541"></p><p>如果你要<strong>讓所有人都可以存取</strong>這個資料夾的話</p><p>那則可以新增一個<code>everyone</code>的使用者</p><br><p><img src="/images/2022/image-20220914222216600.png" alt="image-20220914222216600"></p><p>最後點選 <code>共用</code> 即可</p><p><br><br></p><h3 id="使用APP開啟SMB資料夾"><a href="#使用APP開啟SMB資料夾" class="headerlink" title="使用APP開啟SMB資料夾"></a><strong>使用APP開啟SMB資料夾</strong></h3><p>這邊示範的是用iphone</p><p>下載APP <a href="https://apps.apple.com/tw/app/infuse-7/id1136220934">infuse</a></p><p>先<a href="#連線至VPN-Server" class="node-name--H3">連線至VPN_Server</a></p><p>然後開啟APP</p><br><img src="/images/2022/IMG_3AF2AE7CAF7A-1.jpeg" alt="IMG_3AF2AE7CAF7A-1" style="zoom:50%;" /><p>選擇 <code>新增SMB</code></p><br><img src="/images/2022/IMG_71FF1F0B5BEA-1.jpeg" alt="IMG_71FF1F0B5BEA-1" style="zoom:50%;" /><ul><li>分享名稱 隨意即可</li><li>通訊協定 <code>SMB</code></li><li>Address 區網位置<ul><li>可以參考 <a href="#取得區域網路IP位置" class="node-name--H3">取得區域網路IP位置</a></li></ul></li><li>使用者名稱 &amp; 密碼<ul><li>可以打你window專用的<code>登入帳號</code> 跟 <code>密碼</code><ul><li>可以拿到最高權限</li></ul></li><li>也可以打everyone<ul><li><strong>everyone的話就不用輸入密碼</strong></li></ul></li></ul></li></ul><p>然後點 <strong>新增</strong></p><br><img src="/images/2022/image-20220914223331251.png" alt="image-20220914223331251" style="zoom:50%;" /><p>這樣就可以看到剛剛新增好的SMB連線了</p><p>點擊進入即可瀏覽檔案</p><br><h3 id="透過連結存取SMB"><a href="#透過連結存取SMB" class="headerlink" title="透過連結存取SMB"></a><strong>透過連結存取SMB</strong></h3><br><h4 id="Mac-1"><a href="#Mac-1" class="headerlink" title="Mac"></a><strong>Mac</strong></h4><p>Mac的話其實可以直接透過</p><p>smb:&#x2F;&#x2F;你的區網IP 的方式來存取SMB資料夾</p><p>ex : smb:&#x2F;&#x2F;192.168.1.100</p><p>輸入到瀏覽器 or 支援SMB連線的<code>應用程式</code>即可</p><br><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><strong>Windows</strong></h4><p>透過網路的芳鄰存取即可</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇文章是記錄如何搭建&lt;code&gt;VPN Server&lt;/code&gt;並透過&lt;code&gt;SMB連線&lt;/code&gt;的方式存取電腦中的檔案&lt;/p&gt;
&lt;p&gt;非專業教學文，若有錯誤請留言告知，謝謝&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="vpn" scheme="https://charliee2000.github.io/categories/vpn/"/>
    
    
    <category term="vpn" scheme="https://charliee2000.github.io/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Examples for javax.ws.rs.client.ClientBuilder</title>
    <link href="https://charliee2000.github.io/2022/09/05/20220905-2/"/>
    <id>https://charliee2000.github.io/2022/09/05/20220905-2/</id>
    <published>2022-09-05T14:18:11.000Z</published>
    <updated>2022-09-08T05:42:52.017Z</updated>
    
    <content type="html"><![CDATA[<p>Using javax.ws.rs.client.ClientBuilder example</p><br><span id="more"></span><h2 id="1-Dependency"><a href="#1-Dependency" class="headerlink" title="1. Dependency"></a>1. Dependency</h2><pre><code class="xml">&lt;dependency&gt;  &lt;groupId&gt;javax.ws.rs&lt;/groupId&gt;  &lt;artifactId&gt;javax.ws.rs-api&lt;/artifactId&gt;  &lt;version&gt;2.1.1&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;  &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;  &lt;artifactId&gt;jersey-client&lt;/artifactId&gt;  &lt;version&gt;2.37&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;  &lt;groupId&gt;org.glassfish.jersey.inject&lt;/groupId&gt;  &lt;artifactId&gt;jersey-hk2&lt;/artifactId&gt;  &lt;version&gt;2.37&lt;/version&gt;&lt;/dependency&gt;</code></pre><br><h2 id="2-Exmaple"><a href="#2-Exmaple" class="headerlink" title="2. Exmaple"></a>2. Exmaple</h2><h3 id="Java-code"><a href="#Java-code" class="headerlink" title="Java code"></a>Java code</h3><pre><code class="java">// init clientClient client = ClientBuilder.newClient();// Demo API// Using google app script simple api for demoString link = &quot;https://script.google.com/macros/s/AKfycbyPthJ8iO6B1fPR1YBVvltBQz4dvAnrtE48sw0VxqMIW-XwejTsS4db3Pgw3oUWA4U/exec&quot;;Response response = client  .target(link)  .request(MediaType.APPLICATION_JSON)  .get();// read response bodyString body = response.readEntity(String.class);System.out.println(&quot;response = &quot; + response);System.out.println(&quot;response.getStatus() = &quot; + response.getStatus());System.out.println(&quot;body = &quot; + body);// junit checkAssert.assertEquals(200, response.getStatus());</code></pre><h3 id="Run-console"><a href="#Run-console" class="headerlink" title="Run console"></a>Run console</h3><pre><code>response = InboundJaxrsResponse&#123;context=ClientResponse&#123;method=GET, uri=https://script.google.com/macros/s/AKfycbyPthJ8iO6B1fPR1YBVvltBQz4dvAnrtE48sw0VxqMIW-XwejTsS4db3Pgw3oUWA4U/exec, status=200, reason=OK&#125;&#125;response.getStatus() = 200body = &#123;&quot;content&quot;:[&#123;&quot;status&quot;:&quot;success&quot;&#125;]&#125;</code></pre><br><h2 id="3-Source-Code"><a href="#3-Source-Code" class="headerlink" title="3. Source Code"></a>3. Source Code</h2><pre><code class="sh">git clone https://github.com/charliee2000/code-java.git</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;Using javax.ws.rs.client.ClientBuilder example&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="java" scheme="https://charliee2000.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://charliee2000.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] How to add github corners in hexo blog</title>
    <link href="https://charliee2000.github.io/2022/09/05/20220905/"/>
    <id>https://charliee2000.github.io/2022/09/05/20220905/</id>
    <published>2022-09-05T02:38:32.000Z</published>
    <updated>2022-09-05T04:59:06.949Z</updated>
    
    <content type="html"><![CDATA[<p>常常會在逛blog的時候看到角落有一個會動的github的圖標</p><p>點擊後可以連結到你的github</p><img src="/images/2022/Sep-05-2022%2011-18-29.gif" alt="Sep-05-2022 11-18-29" style="zoom:67%;" /><p>趣味性十足的按鈕，我也想放一個</p><br><span id="more"></span><h2 id="下載樣式"><a href="#下載樣式" class="headerlink" title="下載樣式"></a><strong>下載樣式</strong></h2><p>首先，先在</p><p><a href="https://tholman.com/github-corners/">https://tholman.com/github-corners/</a></p><p>選擇一個你喜歡的樣式</p><p><img src="/images/2022/image-20220905112326191.png" alt="image-20220905112326191"></p><p>把右邊的內容copy起來</p><p>放到themes底下的layout.ejs  <code>個人是使用Aomori主題</code></p><h3 id="資料夾結構"><a href="#資料夾結構" class="headerlink" title="資料夾結構"></a><strong>資料夾結構</strong></h3><pre><code>├── CHANGELOG.md├── LICENSE├── README.md├── docs├── languages├── layout│   ├── layout.ejs├── source└── stylelint.config.js</code></pre><br><h3 id="修改layout-ejs"><a href="#修改layout-ejs" class="headerlink" title="修改layout.ejs"></a><strong>修改layout.ejs</strong></h3><p>貼到body內即可</p><pre><code class="html">&lt;body&gt;  ...      &lt;a href=&quot;https://github.com/charliee2000&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#353F4F; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;    ...&lt;/body&gt;</code></pre><br><h3 id="增加-config-yml外部參數"><a href="#增加-config-yml外部參數" class="headerlink" title="增加_config.yml外部參數"></a>增加_config.yml外部參數</h3><p>在layout.ejs中把gitHub corner的html包起來</p><pre><code class="javascript">&lt;% if (config.github_corner.enable == 1)&#123; %&gt;        &lt;% &#125; %&gt;</code></pre><br><p>在_config.yml增加設定開關</p><pre><code class="yml">github_corner:  enable: 1</code></pre><br><h3 id="替換顏色"><a href="#替換顏色" class="headerlink" title="替換顏色"></a><strong>替換顏色</strong></h3><pre><code class="css">style=&quot;fill:#353F4F&quot;</code></pre><p>可以替換你想要填充的顏色 <span style="color:#353F4F"><code> #353F4F 的範例是深藍色</code></span></p><br><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a><strong>Demo</strong></h2><p><img src="/images/2022/image-20220905113710566.png" alt="image-20220905113710566"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;常常會在逛blog的時候看到角落有一個會動的github的圖標&lt;/p&gt;
&lt;p&gt;點擊後可以連結到你的github&lt;/p&gt;
&lt;img src=&quot;/images/2022/Sep-05-2022%2011-18-29.gif&quot; alt=&quot;Sep-05-2022 11-18-29&quot; style=&quot;zoom:67%;&quot; /&gt;

&lt;p&gt;趣味性十足的按鈕，我也想放一個&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/tags/hexo/"/>
    
    <category term="github" scheme="https://charliee2000.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>[Chrome] 11 Best Google Chrome Extensions in 2022</title>
    <link href="https://charliee2000.github.io/2022/09/02/20220902-3/"/>
    <id>https://charliee2000.github.io/2022/09/02/20220902-3/</id>
    <published>2022-09-02T06:49:32.000Z</published>
    <updated>2022-09-02T11:34:42.925Z</updated>
    
    <content type="html"><![CDATA[<p>個人常用的一些Chrome外掛介紹</p><br><span id="more"></span><h2 id="Chrome-Plugin介紹"><a href="#Chrome-Plugin介紹" class="headerlink" title="Chrome Plugin介紹"></a>Chrome Plugin介紹</h2><br><img src="/images/2022/aa01.jpeg" alt="aa01" style="zoom: 50%;" /><h3 id="1-Google-Translate"><a href="#1-Google-Translate" class="headerlink" title="1. Google Translate"></a>1. <a href="https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb">Google Translate</a></h3><p>Google Translate是google官方出品的好用的google翻譯外掛</p><p>可以直接將選取起來的字翻譯</p><p>對英文不好的苦手來說相當的方便</p><br><img src="/images/2022/iShot_2022-09-01_15.41.31.png" alt="iShot_2022-09-01_15.41.31" style="zoom: 67%;" /><p>選取要翻譯的單字</p><p>會出現google翻譯的icon</p><br><img src="/images/2022/iShot_2022-09-01_15.41.38.png" alt="iShot_2022-09-01_15.41.38" style="zoom: 67%;" /><p>點擊icon就會直接跳出翻譯的內容</p><br><p><img src="/images/2022/iShot_2022-09-01_15.41.53.png" alt="iShot_2022-09-01_15.41.53"></p><p>也可以直接翻譯一整句</p><br><img src="/images/2022/aa02.jpeg" alt="aa02" style="zoom:50%;" /><h3 id="2-Url-Shortener"><a href="#2-Url-Shortener" class="headerlink" title="2. Url Shortener"></a>2. <a href="https://chrome.google.com/webstore/detail/url-shortener/oodfdmglhbbkkcngodjjagblikmoegpa">Url Shortener</a></h3><p>Url Shortener是一款短網址的外掛</p><p>可以快速的把一長串的網址連結縮短</p><img src="/images/2022/iShot_2022-09-02_11.05.12.png" alt="iShot_2022-09-02_11.05.12" style="zoom:67%;" /><p>在要縮短網址的網站點選icon即可</p><br><img src="/images/2022/aa03.jpeg" alt="aa03" style="zoom:50%;" /><h3 id="3-Check-plus-for-gmail"><a href="#3-Check-plus-for-gmail" class="headerlink" title="3. Check plus for gmail"></a>3. <a href="https://chrome.google.com/webstore/detail/checker-plus-for-gmail/oeopbcgkkoapgobdbedcemjljbihmemj">Check plus for gmail</a></h3><p>好用的Gmail通知外掛</p><img src="/images/2022/iShot_2022-09-02_11.28.47.png" alt="iShot_2022-09-02_11.28.47" style="zoom:67%;" /><p>可以直接點icon叫出信箱</p><br><img src="/images/2022/iShot_2022-09-02_11.29.38.png" alt="iShot_2022-09-02_11.29.38" style="zoom:33%;" /><p>有mail來的時候會彈出訊息通知，十分方便</p><br><img src="/images/2022/aa04.jpeg" alt="aa04" style="zoom:50%;" /><h3 id="4-Dark-Reader"><a href="#4-Dark-Reader" class="headerlink" title="4. Dark Reader"></a>4. <a href="https://chrome.google.com/webstore/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh">Dark Reader</a></h3><p>把瀏覽器變成暗黑模式的好幫手</p><p>保護眼睛從你我開始</p><p>範例為google首頁</p><h4 id="Normal"><a href="#Normal" class="headerlink" title="Normal"></a><strong>Normal</strong></h4><p><img src="/images/2022/iShot_2022-09-02_14.01.32.png" alt="iShot_2022-09-02_14.01.32"></p><br><h4 id="Dark-mode"><a href="#Dark-mode" class="headerlink" title="Dark mode"></a><strong>Dark mode</strong></h4><p><img src="/images/2022/iShot_2022-09-02_14.01.51.png" alt="iShot_2022-09-02_14.01.51"></p><br><img src="/images/2022/aa05.jpeg" alt="aa05" style="zoom:50%;" /><h3 id="5-Short-cut-for-google"><a href="#5-Short-cut-for-google" class="headerlink" title="5. Short cut for google"></a>5. <a href="https://chrome.google.com/webstore/detail/shortcuts-for-google/baohinapilmkigilbbbcccncoljkdpnd">Short cut for google</a></h3><p>好用的google工具捷徑，可自定義，隨選即用</p><p><img src="/images/2022/iShot_2022-09-02_14.06.06.png" alt="iShot_2022-09-02_14.06.06"></p><br><img src="/images/2022/aa06.jpeg" alt="aa06" style="zoom:50%;" /><h3 id="6-Styler"><a href="#6-Styler" class="headerlink" title="6. Styler"></a>6. <a href="https://chrome.google.com/webstore/detail/styler/bogdgcfoocbajfkjjolkmcdcnnellpkb">Styler</a></h3><p>自定義網站的CSS&amp;Javascript工具，支援jQuery語法</p><p><img src="/images/2022/iShot_2022-09-02_14.12.33.png" alt="iShot_2022-09-02_14.12.33"></p><br><img src="/images/2022/aa07.jpeg" alt="aa07" style="zoom:50%;" /><h3 id="7-Fireshot"><a href="#7-Fireshot" class="headerlink" title="7. Fireshot"></a>7. <a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg">Fireshot</a></h3><p>支援滾動式截圖，擷取長圖片很方便</p><p><img src="/images/2022/iShot_2022-09-02_14.18.29.png" alt="iShot_2022-09-02_14.18.29"></p><br><p>範例擷取的頁面是<code>維基百科</code>的<code>Google</code>介紹</p><br><img src="/images/2022/aa08.jpeg" alt="aa08" style="zoom:50%;" /><h3 id="8-Wikiwand"><a href="#8-Wikiwand" class="headerlink" title="8. Wikiwand"></a>8. <a href="https://chrome.google.com/webstore/detail/wikiwand-wikipedia-modern/emffkefkbkpkgpdeeooapgaicgmcbolj">Wikiwand</a></h3><p>美化維基百科的套件，使用體驗非常好</p><p>範例為<code>維基百科</code>的<code>Java</code></p><p>Before</p><p><img src="/images/2022/iShot_2022-09-02_14.21.38.png" alt="iShot_2022-09-02_14.21.38"></p><br><p>After</p><p><img src="/images/2022/iShot_2022-09-02_14.21.50.png" alt="iShot_2022-09-02_14.21.50"></p><p>左邊變成了索引，右上角有需多功能的按鈕</p><p>可以切換不同國家的wiki, 自定義字體大小等等</p><br><img src="/images/2022/aa09.jpeg" alt="aa09" style="zoom:50%;" /><h3 id="9-Weava-Highlighter"><a href="#9-Weava-Highlighter" class="headerlink" title="9. Weava Highlighter"></a>9. <a href="https://chrome.google.com/webstore/detail/weava-highlighter-pdf-web/cbnaodkpfinfiipjblikofhlhlcickei">Weava Highlighter</a></h3><p>好用的螢光筆外掛，可以直接在網頁的文章中幫你畫重點&amp;筆記</p><p>而且登入帳號之後可以在不同裝置上同步</p><p>可惜的是 免費版的只有100MB的額度 <code>劃線是不用額度的 寫筆記才需要</code></p><p><img src="/images/2022/iShot_2022-09-02_14.30.31.png" alt="iShot_2022-09-02_14.30.31"></p><br><img src="/images/2022/aa10.jpeg" alt="aa10" style="zoom:50%;" /><h3 id="10-Image-Search-Options"><a href="#10-Image-Search-Options" class="headerlink" title="10. Image Search Options"></a>10. <a href="https://chrome.google.com/webstore/detail/image-search-options/kljmejbpilkadikecejccebmccagifhl?hl=zh-TW">Image Search Options</a></h3><p>以圖搜圖的外掛，支援各種搜圖的網站</p><img src="/images/2022/iShot_2022-09-02_14.44.40.png" alt="iShot_2022-09-02_14.44.40" style="zoom:67%;" /><br><img src="/images/2022/aa11.jpeg" alt="aa11" style="zoom:50%;" /><h3 id="11-Wappalyzer"><a href="#11-Wappalyzer" class="headerlink" title="11. Wappalyzer"></a>11. <a href="https://chrome.google.com/webstore/detail/wappalyzer-technology-pro/gppongmhjkpfnbhagpmjfkannfbllamg">Wappalyzer</a></h3><p>好用的網站檢測工具，可以分析出網站使用的技術，一目瞭然</p><p>範例為Google首頁</p><p><img src="/images/2022/image-20220902193434929.png" alt="image-20220902193434929"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;個人常用的一些Chrome外掛介紹&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="Chrome" scheme="https://charliee2000.github.io/categories/Chrome/"/>
    
    
    <category term="Chrome" scheme="https://charliee2000.github.io/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>[Java] How to use decompile tool (jd-gui) and install it into eclipse</title>
    <link href="https://charliee2000.github.io/2022/09/02/20220902-2/"/>
    <id>https://charliee2000.github.io/2022/09/02/20220902-2/</id>
    <published>2022-09-02T05:04:50.000Z</published>
    <updated>2022-09-04T10:00:44.144Z</updated>
    
    <content type="html"><![CDATA[<p>在追<code>Java</code>程式的時候常常會遇到看不到原始碼的狀況</p><p>只能看<code>.class</code>的模糊資訊</p><p>這種時候可以用反組譯的工具來處理</p><br><span id="more"></span><h2 id="JU-GUI"><a href="#JU-GUI" class="headerlink" title="JU-GUI"></a><strong>JU-GUI</strong></h2><img src="/images/2022/pluginIcon.png" alt="pluginIcon" style="zoom: 10%;" /><p><code>jd-gui</code>是一款eclipse的反組譯套件</p><p>可以直接把.class反編譯成.java</p><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a><strong>安裝</strong></h3><p><a href="https://github.com/java-decompiler/jd-eclipse/releases">https://github.com/java-decompiler/jd-eclipse/releases</a></p><p>下載最新2.0的版本</p><ol><li>透過<strong>Install New Software</strong>的方式安裝</li></ol><p><img src="/images/2022/iShot_2022-09-02_13.03.39.png" alt="iShot_2022-09-02_13.03.39"></p><br><ol start="2"><li>點選 Add</li></ol><img src="/images/2022/iShot_2022-09-02_13.03.47.png" alt="iShot_2022-09-02_13.03.47" style="zoom:50%;" /><br><ol start="3"><li>選擇 Archive</li></ol><p><img src="/images/2022/iShot_2022-09-02_13.08.39.png" alt="iShot_2022-09-02_13.08.39"></p><br><ol start="4"><li>選擇下載好的套件</li></ol><p><img src="/images/2022/iShot_2022-09-02_13.04.13.png" alt="iShot_2022-09-02_13.04.13"></p><br><ol start="5"><li>勾選並安裝</li></ol><br><p>安裝完重開eclipse即可使用</p><br><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a><strong>Demo</strong></h2><p><img src="/images/2022/iShot_2022-09-02_13.12.46.png" alt="iShot_2022-09-02_13.12.46"></p><p>以<code>resteasy</code>的套件為例</p><p>因為我只有下載jar包，所以看不到原始碼</p><p>打開ClientRequest的class的時候會自動幫我編譯成java的格式</p><p>以反組譯的方式開啟的時候會顯示jd-gui的icon (如圖所示)</p><br><h2 id="疑難排除"><a href="#疑難排除" class="headerlink" title="疑難排除"></a><strong>疑難排除</strong></h2><p>如果安裝完之後還是會遇到無法反組譯的情況</p><p>則需要調整eclipse的設定</p><p><img src="/images/2022/iShot_2022-09-02_13.16.09.png" alt="iShot_2022-09-02_13.16.09"></p><p>Preference -&gt; General -&gt; Editors -&gt; File Association</p><p>把 <code>*.class without source</code>預設用jd-gui開啟即可</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在追&lt;code&gt;Java&lt;/code&gt;程式的時候常常會遇到看不到原始碼的狀況&lt;/p&gt;
&lt;p&gt;只能看&lt;code&gt;.class&lt;/code&gt;的模糊資訊&lt;/p&gt;
&lt;p&gt;這種時候可以用反組譯的工具來處理&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="java" scheme="https://charliee2000.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://charliee2000.github.io/tags/java/"/>
    
    <category term="eclipse" scheme="https://charliee2000.github.io/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Solve “javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure” exception</title>
    <link href="https://charliee2000.github.io/2022/09/02/20220902/"/>
    <id>https://charliee2000.github.io/2022/09/02/20220902/</id>
    <published>2022-09-02T02:42:58.000Z</published>
    <updated>2022-09-02T05:51:19.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><p>在使用JBoss resteasy呼叫api的時候出現</p><p><code>javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure</code></p><p>查了資料後發現，會出現這個原因是應該是因為Client端跟Server端的協議版本不一至導致</p><br><span id="more"></span><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><p>先安裝一下nmap</p><pre><code>brew install nmap</code></pre><p>nmap是一款網路的安全工具</p><p>官方介紹：</p><blockquote><p>Nmap (“Network Mapper”) is a <a href="https://nmap.org/npsl/">free and open source</a> utility for network discovery and security auditing.</p></blockquote><br><p>這邊我用來檢查server端的協議版本</p><pre><code>nmap --script ssl-enum-ciphers -p 443 你的server端位置Starting Nmap 7.92 ( &lt;https://nmap.org&gt; ) at 2022-09-02 09:50 CSTNmap scan report for 你的server端位置Host is up (0.10s latency).Other addresses for 你的server端位置PORT    STATE SERVICE443/tcp open  https| ssl-enum-ciphers:|   TLSv1.0:|   TLSv1.1:|_  TLSv1.2:</code></pre><p>看起來是支援TLS1.0, TLS1.1, TLS1.2</p><br><p>接著看一下client端用的協議版本</p><p>在java code中加入</p><pre><code class="java">System.setProperty(&quot;javax.net.debug&quot;, &quot;all&quot;);</code></pre><br><p>再次呼叫之後可以看到以下某一行的輸出</p><pre><code>...Thread-1, WRITE: SSLv2 client hello message, length = 110...</code></pre><p>看起來是client端有上使用到SSLv2的協議版本</p><p>但是server端不支援</p><p>因為專案的項目是使用jdk6</p><p>更換成jdk7後就沒問題了</p><br><hr><h2 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h2><ul><li>oracle<ul><li><a href="https://www.oracle.com/java/technologies/java-archive-downloads-java-plat-downloads.html#jce_policy-6-oth-JPR">jce1.6下載</a></li></ul></li><li>blog<ul><li><a href="https://villebez.blogspot.com/2018/03/jdk16-sslhandshakeexception.html">https://villebez.blogspot.com/2018/03/jdk16-sslhandshakeexception.html</a></li><li><a href="https://blog.csdn.net/keyi__/article/details/122842356">https://blog.csdn.net/keyi__/article/details/122842356</a></li><li><a href="https://www.jianshu.com/p/acbfea5ec597">https://www.jianshu.com/p/acbfea5ec597</a></li></ul></li><li>stackoverflow<ul><li><a href="https://stackoverflow.com/questions/6353849/received-fatal-alert-handshake-failure-through-sslhandshakeexception">https://stackoverflow.com/questions/6353849/received-fatal-alert-handshake-failure-through-sslhandshakeexception</a></li></ul></li><li>other<ul><li><a href="https://itecnote.com/tecnote/java-apache-httpclient-use-own-ssl-certificates/">https://itecnote.com/tecnote/java-apache-httpclient-use-own-ssl-certificates/</a></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h2&gt;&lt;p&gt;在使用JBoss resteasy呼叫api的時候出現&lt;/p&gt;
&lt;p&gt;&lt;code&gt;javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查了資料後發現，會出現這個原因是應該是因為Client端跟Server端的協議版本不一至導致&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="java" scheme="https://charliee2000.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://charliee2000.github.io/tags/java/"/>
    
    <category term="exception" scheme="https://charliee2000.github.io/tags/exception/"/>
    
  </entry>
  
  <entry>
    <title>[Java] How to install sonarlint in eclipse with specify version</title>
    <link href="https://charliee2000.github.io/2022/08/31/20220831/"/>
    <id>https://charliee2000.github.io/2022/08/31/20220831/</id>
    <published>2022-08-31T07:16:45.000Z</published>
    <updated>2022-09-02T02:51:20.146Z</updated>
    
    <content type="html"><![CDATA[<p><strong>SonarLint</strong>是一款Java的程式碼品質分析工具</p><p>支援Eclipse, IntelliJ, Vs Code等開發工具</p><p>幫助弱點掃描、程式優化，使用上也非常方便</p><br><span id="more"></span><h2 id="eclipse安裝"><a href="#eclipse安裝" class="headerlink" title="[eclipse安裝]"></a><strong>[eclipse安裝]</strong></h2><p>eclipse有兩種安裝方式</p><br><h3 id="Marketplace安裝"><a href="#Marketplace安裝" class="headerlink" title="Marketplace安裝"></a><strong>Marketplace安裝</strong></h3><img src="/images/2022/Xnip2022-08-31_17-07-11.jpg" alt="Xnip2022-08-31_17-07-11" style="zoom: 67%;" /><p>一般來說新版本的eclipse可以直接透過marketplace安裝</p><p>但是如果是舊版本的eclipse，可能會出現相容性的問題</p><p>那就要透過 install new software的方式</p><br><h3 id="Install-New-Software-安裝"><a href="#Install-New-Software-安裝" class="headerlink" title="Install New Software 安裝"></a><strong>Install New Software 安裝</strong></h3><p>舊版本的SonarLint可以透過以下連結下載安裝包</p><p><a href="https://binaries.sonarsource.com/?prefix=SonarLint-for-Eclipse/releases/">https://binaries.sonarsource.com/?prefix=SonarLint-for-Eclipse/releases/</a></p><p>這邊示範的是eclipse-2020-03+sonarlint5.1的版本</p><p><img src="/images/2022/Xnip2022-08-31_13-14-42.jpg" alt="Xnip2022-08-31_13-14-42"></p><p>點選 <strong>Add</strong></p><br><img src="/images/2022/Xnip2022-08-31_13-14-53.jpg" alt="Xnip2022-08-31_13-14-53" style="zoom: 67%;" /><p>點選 <strong>Archive</strong></p><br><img src="/images/2022/Xnip2022-08-31_14-17-19.jpg" alt="Xnip2022-08-31_14-17-19" style="zoom:67%;" /><p>選擇下載好的安裝包</p><br><p><img src="/images/2022/Xnip2022-08-31_17-13-32.jpg" alt="Xnip2022-08-31_17-13-32"></p><p>只勾選第一個，點next進行安裝</p><p>安裝完成重啟eclipse即可</p><br><img src="/images/2022/Xnip2022-08-31_17-19-13.jpg" alt="Xnip2022-08-31_17-19-13" style="zoom:67%;" /><p>使用方式：對要檢查的檔案點選 右鍵 -&gt; Sonarlint -&gt; Analyze</p><br><h2 id="Demo"><a href="#Demo" class="headerlink" title="[Demo]"></a><strong>[Demo]</strong></h2><img src="/images/2022/Xnip2022-08-31_17-04-34.jpg" alt="Xnip2022-08-31_17-04-34" style="zoom:67%;" /><img src="/images/2022/Xnip2022-08-31_17-29-28.jpg" alt="Xnip2022-08-31_17-29-28" style="zoom:67%;" /><p>在Sonarlint report會掃出針對這段程式的弱點</p><br><h2 id="錯誤排查"><a href="#錯誤排查" class="headerlink" title="[錯誤排查]"></a><strong>[錯誤排查]</strong></h2><h3 id="Lombok版本過舊"><a href="#Lombok版本過舊" class="headerlink" title="Lombok版本過舊"></a><strong>Lombok版本過舊</strong></h3><blockquote><p>An internal error occurred during: “SonarLint processing file &#x2F;charlie&#x2F;test&#x2F;sonarlint&#x2F;Test.java”.<br>lombok&#x2F;launch&#x2F;PatchFixesHider$Transform</p></blockquote><p>會出現這個原因表示eclipse的<code>lombok</code>版本太舊了</p><p>在lombok的官網下載新版安裝即可</p><p><a href="https://projectlombok.org/download">https://projectlombok.org/download</a></p><img src="/images/2022/Xnip2022-08-31_17-25-11.jpg" alt="Xnip2022-08-31_17-25-11" style="zoom: 40%;" /><p>點選install安裝</p><p>安裝完後需要重開eclipse</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;SonarLint&lt;/strong&gt;是一款Java的程式碼品質分析工具&lt;/p&gt;
&lt;p&gt;支援Eclipse, IntelliJ, Vs Code等開發工具&lt;/p&gt;
&lt;p&gt;幫助弱點掃描、程式優化，使用上也非常方便&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="java" scheme="https://charliee2000.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://charliee2000.github.io/tags/java/"/>
    
    <category term="eclipse" scheme="https://charliee2000.github.io/tags/eclipse/"/>
    
    <category term="sonarlint" scheme="https://charliee2000.github.io/tags/sonarlint/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] How to create rss service on hexo blog</title>
    <link href="https://charliee2000.github.io/2022/08/29/20220829/"/>
    <id>https://charliee2000.github.io/2022/08/29/20220829/</id>
    <published>2022-08-29T14:07:13.000Z</published>
    <updated>2022-09-02T07:05:30.801Z</updated>
    
    <content type="html"><![CDATA[<p>因為平時有在訂閱RSS，所以想說是否在hexo上也可以提供RSS訂閱</p><p>於是找到了這款RSS插件</p><span id="more"></span><br><h2 id="RSS設定配置"><a href="#RSS設定配置" class="headerlink" title="RSS設定配置"></a>RSS設定配置</h2><h3 id="安裝插件"><a href="#安裝插件" class="headerlink" title="安裝插件"></a>安裝插件</h3><pre><code>npm install --save hexo-generator-feed</code></pre><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><pre><code># Extensionsplugins:  hexo-generator-feed#Feed Atomfeed:  type: atom  path: atom.xml  limit: 20# For aomori themeaomori_social:    icon: logo-rss    type: logo    url: https://username.github.io/atom.xml</code></pre><h2 id="產生atom-xml"><a href="#產生atom-xml" class="headerlink" title="產生atom.xml"></a>產生atom.xml</h2><pre><code>hexo g</code></pre><p>成功的話就會看到public資料夾下多了一個atom.xml檔案</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="[Demo]"></a><strong>[Demo]</strong></h2><p><img src="/images/2022/b01-1787819.jpg" alt="b01"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;因為平時有在訂閱RSS，所以想說是否在hexo上也可以提供RSS訂閱&lt;/p&gt;
&lt;p&gt;於是找到了這款RSS插件&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://charliee2000.github.io/tags/blog/"/>
    
    <category term="rss" scheme="https://charliee2000.github.io/tags/rss/"/>
    
  </entry>
  
  <entry>
    <title>[Notion] How to draw diagrams in notion with mermaid</title>
    <link href="https://charliee2000.github.io/2022/08/26/20220825-3/"/>
    <id>https://charliee2000.github.io/2022/08/26/20220825-3/</id>
    <published>2022-08-25T16:07:13.000Z</published>
    <updated>2022-09-02T07:04:01.224Z</updated>
    
    <content type="html"><![CDATA[<p>在開發的時候我常會用Notion來記錄開發的資訊</p><p>有次需要畫一個簡單的流程圖來釐清一下邏輯</p><p>發現Notion的code的編輯區有支援Mermaid的語法</p><p>使用後覺得非常好用而且很方便</p><br><span id="more"></span><p>官方介紹</p><blockquote><p>Mermaid is a JavaScript-based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. The main purpose of Mermaid is to help documentation catch up with development.</p></blockquote><ul><li>透過簡單的語法把文字渲染成流程圖</li><li>簡單方便使用</li></ul><br><h2 id="Notion使用Mermaid"><a href="#Notion使用Mermaid" class="headerlink" title="Notion使用Mermaid"></a>Notion使用Mermaid</h2><h3 id="新增Code區塊"><a href="#新增Code區塊" class="headerlink" title="新增Code區塊"></a>新增Code區塊</h3><img src="/images/20220825/a0825_05.jpg" alt="a0825_05" style="zoom:50%;" /><br><h3 id="選擇Mermaid"><a href="#選擇Mermaid" class="headerlink" title="選擇Mermaid"></a>選擇Mermaid</h3><img src="/images/20220825/a0825_06.jpg" width="80%" height="80%"><br><h2 id="Demo畫面"><a href="#Demo畫面" class="headerlink" title="[Demo畫面]"></a><strong>[Demo畫面]</strong></h2><h3 id="FlowChart-流程圖"><a href="#FlowChart-流程圖" class="headerlink" title="FlowChart 流程圖"></a>FlowChart 流程圖</h3><pre><code class="mermaid">flowchart LR %% TD(直排) or LR(橫排)%% 定義顏色classDef blue fill:#3567AB,stroke:#000,stroke-width:2px,color:#fffclassDef purple fill:#6C3365,stroke:#000,stroke-width:2px,color:#fffclassDef orange fill:#fc822b,stroke:#000,stroke-width:2px,color:#fffclassDef red fill:#DE3B25,stroke:#000,stroke-width:2px,color:#fffclassDef green fill:#1F4131,stroke:#000,stroke-width:2px,color:#fffclassDef yellow fill:#FEB847,stroke:#000,stroke-width:2px,color:#fffclassDef spindle fill:#B9D2F0,stroke:#000,stroke-width:2px,color:#fffclassDef pink fill:#DFC6DB,stroke:#000,stroke-width:2px,color:#fffclassDef white fill:white,stroke:#000,stroke-width:2px,color:black%% 先定義好區塊O((Start)):::spindleA(&quot;☪&quot; Project):::blueP([Page]):::orangeB[Upload]:::redC[Create Data]:::greenD[(DataBase)]:::purpleE((Stop)):::pinkF&#123;check&#125;:::yellow%% 利用嵌入html的技巧調整X[&quot;&lt;div style=&#39;color:black;font-size:20px;margin:10px&#39;&gt;Diagram&lt;/div&gt;&quot;]:::white%% 透過subgraph劃分區塊subgraph ProjectO--&gt;A-.-&gt;Pendsubgraph Inner-ProjectP--&gt;|trigger upload|BB--&gt;CC==&gt;|1|DD==&gt;|2|CC--&gt;|3.checking data|FF--&gt;|N|Eend%% 返回資料F--&gt;|Y:Return data &amp; show|P</code></pre><img src="/images/20220825/a0825_07.jpg" width="80%" height="80%"><h2 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a><strong>參考資訊</strong></h2><ul><li><a href="https://www.jinnsblog.com/2022/06/notion-flowchat-by-mermaid.html">[Notion] 利用 Mermaid 建立流程圖、甘特圖、圓餅圖等各式圖形</a></li><li><a href="https://mermaid-js.github.io/mermaid/#/">Mermaid - 官方文件</a></li><li><a href="https://www.redgregory.com/notion/2022/1/17/how-to-get-started-with-mermaid-in-notion">HOW TO GET STARTED WITH MERMAID IN NOTION</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在開發的時候我常會用Notion來記錄開發的資訊&lt;/p&gt;
&lt;p&gt;有次需要畫一個簡單的流程圖來釐清一下邏輯&lt;/p&gt;
&lt;p&gt;發現Notion的code的編輯區有支援Mermaid的語法&lt;/p&gt;
&lt;p&gt;使用後覺得非常好用而且很方便&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="Notion" scheme="https://charliee2000.github.io/categories/Notion/"/>
    
    
    <category term="Mermaid" scheme="https://charliee2000.github.io/tags/Mermaid/"/>
    
    <category term="Notion" scheme="https://charliee2000.github.io/tags/Notion/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] How to generate README.md when hexo generate deploy to github</title>
    <link href="https://charliee2000.github.io/2022/08/25/20220825-2/"/>
    <id>https://charliee2000.github.io/2022/08/25/20220825-2/</id>
    <published>2022-08-25T15:22:05.000Z</published>
    <updated>2022-09-02T07:03:52.943Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://readme.md/"><code>README.md</code></a> 在產生repo的時候沒有新增</p><p>導致之後做deploy的時候都會把github上新產生的<code>README.md</code>給蓋掉</p><p>嘗試了幾種做法</p><br><span id="more"></span><h2 id="解法"><a href="#解法" class="headerlink" title="[解法]"></a><strong>[解法]</strong></h2><h3 id="1-skip-render"><a href="#1-skip-render" class="headerlink" title="1. skip_render"></a><strong>1. skip_render</strong></h3><p>新增一個<code>README.md</code>放在source的資料夾底下</p><p>並且在_config.yml中加入</p><p><code>skip_render: README.md</code></p><p>這樣可以讓hexo在做generate的時候忽略<code>README.md</code></p><p>不會把它轉成<code>README.html</code></p><p>但是我的主題<strong>Aomori</strong>似乎不管用</p><p>後來在StackOverFlow上找到另一種折衷的解法</p><br><h3 id="2-README-mdown"><a href="#2-README-mdown" class="headerlink" title="2. README.mdown"></a><strong>2. README.mdown</strong></h3><p>一樣先新增一個<code>README.mdown</code>放在source的資料夾底下</p><p>這樣就不會變成<code>README.html</code></p><br><p>Github上可以支援這種副檔名</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><img src="/images/20220825/a0825_04.jpg" alt="a0825_04.jpg"></p><br><h2 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h2><blockquote><p><a href="https://stackoverflow.com/questions/25258660/how-do-i-add-a-readme-md-file-into-the-root-directory-of-the-generated-blog-by-h/31051913#31051913">StackOverFlow - How do I add a README.md file into the root directory of the generated blog by HEXO?</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://readme.md/&quot;&gt;&lt;code&gt;README.md&lt;/code&gt;&lt;/a&gt; 在產生repo的時候沒有新增&lt;/p&gt;
&lt;p&gt;導致之後做deploy的時候都會把github上新產生的&lt;code&gt;README.md&lt;/code&gt;給蓋掉&lt;/p&gt;
&lt;p&gt;嘗試了幾種做法&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://charliee2000.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>[Mac] How to add “Google Keep” to Mac OS like an app in docker</title>
    <link href="https://charliee2000.github.io/2022/08/25/20220825/"/>
    <id>https://charliee2000.github.io/2022/08/25/20220825/</id>
    <published>2022-08-25T14:24:22.000Z</published>
    <updated>2022-09-02T07:04:28.573Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://keep.google.com/"><font color=#daa520><strong>Google Keep</strong> </font></a>在2021 年初已經停用了對Chrome桌面版的支援</p><p>只剩下Web版跟手機版</p><p>作為一個常使用<font color=#daa520> <strong>Google Keep</strong> </font>來記錄一些瑣事的人</p><p>要一直打開瀏覽器再開啟網頁版真的是很痛苦</p><br><span id="more"></span><h2 id="桌面捷徑"><a href="#桌面捷徑" class="headerlink" title="[桌面捷徑]"></a><strong>[桌面捷徑]</strong></h2><p>後來發現了Chrome有保留把<font color=#daa520> <strong>Google Keep</strong> </font>作為桌面捷徑的方式(<code>只適用於Mac</code>)</p><br><h2 id="開啟之後的樣子"><a href="#開啟之後的樣子" class="headerlink" title="[開啟之後的樣子]"></a><strong>[開啟之後的樣子]</strong></h2><img src="/images/20220825/a0825_02.jpg" width="50%" height="50%"><br><h2 id="設置方式"><a href="#設置方式" class="headerlink" title="[設置方式]"></a><strong>[設置方式]</strong></h2><p>打開<a href="https://keep.google.com/"><font color=#daa520> <strong>Google Keep</strong> </font></a><br>在瀏覽器右上 ⋮ → 更多工具 → 建立捷徑</p><img src="/images/20220825/a0825_03.jpg" width="80%" height="80%"><p>這樣就新增完成了</p><p>可以獨立於Chrome獨自運作，看起來就像桌面程式一樣</p><br><h2 id="Demo畫面"><a href="#Demo畫面" class="headerlink" title="[Demo畫面]"></a><strong>[Demo畫面]</strong></h2><img src="/images/20220825/a0825_01.jpg" width="50%" height="50%">]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://keep.google.com/&quot;&gt;&lt;font color=#daa520&gt;&lt;strong&gt;Google Keep&lt;/strong&gt; &lt;/font&gt;&lt;/a&gt;在2021 年初已經停用了對Chrome桌面版的支援&lt;/p&gt;
&lt;p&gt;只剩下Web版跟手機版&lt;/p&gt;
&lt;p&gt;作為一個常使用&lt;font color=#daa520&gt; &lt;strong&gt;Google Keep&lt;/strong&gt; &lt;/font&gt;來記錄一些瑣事的人&lt;/p&gt;
&lt;p&gt;要一直打開瀏覽器再開啟網頁版真的是很痛苦&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="Mac" scheme="https://charliee2000.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://charliee2000.github.io/tags/Mac/"/>
    
    <category term="Google Keep" scheme="https://charliee2000.github.io/tags/Google-Keep/"/>
    
    <category term="Chrome" scheme="https://charliee2000.github.io/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] How to setup a simple comments in hexo blog</title>
    <link href="https://charliee2000.github.io/2022/08/24/20220824/"/>
    <id>https://charliee2000.github.io/2022/08/24/20220824/</id>
    <published>2022-08-24T15:22:14.000Z</published>
    <updated>2022-09-02T07:03:44.083Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在Hexo上架設留言區</p><p>我個人使用的主題Aomori有支援多種留言的套件</p><p>以下為嘗試過的各種版本</p></blockquote><br><span id="more"></span><br><h3 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a><strong>Gitalk</strong></h3><blockquote><p>先是使用了Github出的Gitalk</p><p>使用上看起來很棒，但是在網址上有 #XXX 的頁面導航的情況很常出問題</p><p>明明是同一篇卻看不到之前的人的留言</p></blockquote><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a><strong>Disqus</strong></h3><blockquote><p>後來換成了Disqus，使用上非常的棒</p><p>支援多個平台登入留言</p><p>而且可以支援針對個別的留言搭樓層回覆</p><p>不過個人感覺..整體的排版有點太花了</p></blockquote><h3 id="utteranc"><a href="#utteranc" class="headerlink" title="utteranc"></a><strong>utteranc</strong></h3><blockquote><p>最後看到了utteranc</p><p>跟Gitalk相同是以Github的issue的方式留言</p><p>整體的使用上非常簡潔</p></blockquote><br>綜合以上所述，我最後選擇了utteranc<p>以下則是記錄了utteranc設定的過程</p><h2 id="utteranc留言區設置"><a href="#utteranc留言區設置" class="headerlink" title="[utteranc留言區設置]"></a><strong>[utteranc留言區設置]</strong></h2><h3 id="1-建立留言用的repo"><a href="#1-建立留言用的repo" class="headerlink" title="1. 建立留言用的repo"></a>1. 建立留言用的repo</h3><p>如果hexo是搭建在github上的也可以直接使用該repo</p><p>也可以創建一個新的</p><img src="/images/20220824/a01.jpg" width="50%" height="50%"><br><h3 id="2-安裝utteranc外掛"><a href="#2-安裝utteranc外掛" class="headerlink" title="2. 安裝utteranc外掛"></a>2. 安裝utteranc外掛</h3><p>安裝連結： <a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a></p><p>點選install按鈕 <code>這邊已經安裝過了所以顯示的是Configure</code></p><p><img src="/images/20220824/a02.jpg" alt="a02.jpg"></p><p>這邊只要選擇要存放issue的留言的repo就好</p><p>選擇完後，點選左下角的install <code>這裡已經安裝過了所以顯示的是save</code></p><p><img src="/images/20220824/a03.jpg" alt="a03.jpg"></p><p>之後會被導向到說明的頁面 <a href="https://utteranc.es/">https://utteranc.es/</a></p><p><img src="/images/20220824/a04.jpg" alt="a04.jpg"></p><br><h3 id="3-增加script至comments-ejs"><a href="#3-增加script至comments-ejs" class="headerlink" title="3. 增加script至comments.ejs"></a>3. 增加script至comments.ejs</h3><p>最下方會看到產生script的區塊</p><p><img src="/images/20220824/a05.jpg" alt="a05.jpg"></p><p>repo填入你github的repo</p><pre><code class="javascript">&lt;script src=&quot;https://utteranc.es/client.js&quot;        repo=&quot;username/username.github.io&quot;        issue-term=&quot;pathname&quot;        theme=&quot;github-light&quot;        crossorigin=&quot;anonymous&quot;        async&gt;&lt;/script&gt;</code></pre><p>因為我這邊選擇的是Aomori主題，並沒有支援utteranc，所以需要這邊直接修改程式碼</p><p>要把這段script放入到<code>comments.ejs</code>中</p><p><strong>themes</strong>資料夾結構</p><pre><code>├── CHANGELOG.md├── LICENSE├── README.md├── docs├── languages├── layout│   ├── _partial│   │   ├── page│   │   ├── post│   │       ├── comments.ejs│   ├── _widget├── source│   ├── dist│   ├── javascripts│   ├── modules│   └── stylesheets└── stylelint.config.js</code></pre><p>直接貼在<code>comments.ejs</code>最下方即可</p><br><h2 id="增加-config-yml外部設置-optional"><a href="#增加-config-yml外部設置-optional" class="headerlink" title="[增加_config.yml外部設置 (optional)]"></a><strong>[增加_config.yml外部設置 (optional)]</strong></h2><p>如果想要在<code>_config.xml</code>增加設定檔</p><p>script可以這樣調整</p><h3 id="comments-ejs"><a href="#comments-ejs" class="headerlink" title="comments.ejs"></a>comments.ejs</h3><pre><code class="javascript">&lt;% if (config.utteranc_comment)&#123; %&gt;&lt;script src=&quot;https://utteranc.es/client.js&quot;        repo=&quot;&lt;%= config.utteranc_comment.repo || &#39;&#39; %&gt;&quot;        issue-term=&quot;pathname&quot;        theme=&quot;github-light&quot;        crossorigin=&quot;anonymous&quot;        async&gt;&lt;/script&gt;&lt;% &#125; %&gt;</code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><pre><code>utteranc_comment:  repo: username/username.github.io</code></pre><h2 id="Demo畫面"><a href="#Demo畫面" class="headerlink" title="[Demo畫面]"></a><strong>[Demo畫面]</strong></h2><p><img src="/images/20220824/a06.jpg" alt="a06.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在Hexo上架設留言區&lt;/p&gt;
&lt;p&gt;我個人使用的主題Aomori有支援多種留言的套件&lt;/p&gt;
&lt;p&gt;以下為嘗試過的各種版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://charliee2000.github.io/tags/blog/"/>
    
    <category term="comments" scheme="https://charliee2000.github.io/tags/comments/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] How to build a blog by hexo deploy to github</title>
    <link href="https://charliee2000.github.io/2022/08/23/20220823-2/"/>
    <id>https://charliee2000.github.io/2022/08/23/20220823-2/</id>
    <published>2022-08-23T08:52:28.000Z</published>
    <updated>2022-09-02T07:03:16.334Z</updated>
    
    <content type="html"><![CDATA[<p>這篇文章主要記錄架設Hexo網誌並且快速部署到Githug的過程</p><p>從安裝、建立環境，以及hexo的一些常用指令</p><br><span id="more"></span><h2 id="Hexo介紹"><a href="#Hexo介紹" class="headerlink" title="[Hexo介紹]"></a>[Hexo介紹]</h2><blockquote><p><strong>Official:</strong> A fast, simple &amp; powerful blog framework, powered by Node.js.</p></blockquote><ul><li>支援Markdown語法</li><li>Hexo強大的外掛套件</li><li>支援快速部署至Github等平台</li></ul><h2 id="Mac-安裝Homebrew"><a href="#Mac-安裝Homebrew" class="headerlink" title="[Mac][安裝Homebrew]"></a>[Mac][安裝Homebrew]</h2><p><strong>以下安裝都會透過brew工具，所以必須要安裝</strong></p><p>官網：<a href="https://brew.sh/index_zh-tw">https://brew.sh/index_zh-tw</a></p><pre><code>$ /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</code></pre><h2 id="安裝Node-js"><a href="#安裝Node-js" class="headerlink" title="[安裝Node.js]"></a>[安裝Node.js]</h2><pre><code>brew install node</code></pre><h2 id="安裝Git"><a href="#安裝Git" class="headerlink" title="[安裝Git]"></a>[安裝Git]</h2><pre><code>brew install git</code></pre><h2 id="安裝Hexo"><a href="#安裝Hexo" class="headerlink" title="[安裝Hexo]"></a>[安裝Hexo]</h2><pre><code>npm install hexo-cli -g</code></pre><p>安裝完成後可以輸入</p><p><code>hexo -v</code> 來查看版本，確認是否安裝成功</p><h2 id="初始化Hexo資料夾"><a href="#初始化Hexo資料夾" class="headerlink" title="[初始化Hexo資料夾]"></a>[初始化Hexo資料夾]</h2><pre><code>hexo init &lt;fold_name&gt;</code></pre><h2 id="安裝npm的套件"><a href="#安裝npm的套件" class="headerlink" title="[安裝npm的套件]"></a>[安裝npm的套件]</h2><pre><code>npm install</code></pre><h2 id="Hexo資料夾結構"><a href="#Hexo資料夾結構" class="headerlink" title="[Hexo資料夾結構]"></a>[Hexo資料夾結構]</h2><p>安裝完成後會看到以下結構</p><pre><code>├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes</code></pre><p><code>_config.yml</code> 該檔案為修改各種配置跟設定</p><ul><li>官方文件：<a href="https://hexo.io/zh-tw/docs/configuration">https://hexo.io/zh-tw/docs/configuration</a></li></ul><p><code>themes</code></p><ul><li>存放主題的資料夾</li><li>Themes下載<ul><li><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></li></ul></li></ul><p>個人使用的主題為<a href="https://github.com/lh1me/hexo-theme-aomori/releases">Aomori</a></p><h2 id="Hexo常用指令"><a href="#Hexo常用指令" class="headerlink" title="[Hexo常用指令]"></a>[Hexo常用指令]</h2><h3 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h3><pre><code>hexo new &quot;md檔名&quot;</code></pre><h3 id="清除public資料夾靜態檔案"><a href="#清除public資料夾靜態檔案" class="headerlink" title="清除public資料夾靜態檔案"></a>清除public資料夾靜態檔案</h3><pre><code>hexo clean</code></pre><p>可以簡寫成 <code>hexo c</code></p><h3 id="產生public資料夾靜態檔案"><a href="#產生public資料夾靜態檔案" class="headerlink" title="產生public資料夾靜態檔案"></a>產生public資料夾靜態檔案</h3><pre><code>hexo generate</code></pre><p>可以簡寫成 <code>hexo g</code></p><h3 id="啟動本地端伺服器"><a href="#啟動本地端伺服器" class="headerlink" title="啟動本地端伺服器"></a>啟動本地端伺服器</h3><pre><code>hexo server</code></pre><p>可以簡寫成 <code>hexo s</code></p><h3 id="新增一頁page"><a href="#新增一頁page" class="headerlink" title="新增一頁page"></a>新增一頁page</h3><pre><code>hexo new page &quot;page name&quot;</code></pre><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><h3 id="註冊Github帳號並登入"><a href="#註冊Github帳號並登入" class="headerlink" title="註冊Github帳號並登入"></a>註冊<a href="https://github.com/">Github</a>帳號並登入</h3><h3 id="新增一個Repository專案"><a href="#新增一個Repository專案" class="headerlink" title="新增一個Repository專案"></a>新增一個Repository專案</h3><p><img src="/images/20220823/02.png" alt="02.png"></p><h3 id="將Repository-name取名為-username-github-io"><a href="#將Repository-name取名為-username-github-io" class="headerlink" title="將Repository name取名為 username.github.io"></a>將Repository name取名為 username.github.io</h3><p><img src="/images/20220823/03.jpg" alt="03.png"></p><p><a href="http://username.github.io/">username.github.io</a></p><p>之後就會是你網誌的連結</p><h2 id="將Hexo發布到Github"><a href="#將Hexo發布到Github" class="headerlink" title="[將Hexo發布到Github]"></a>[將Hexo發布到Github]</h2><h3 id="安裝hexo-git部署套件"><a href="#安裝hexo-git部署套件" class="headerlink" title="安裝hexo git部署套件"></a>安裝hexo git部署套件</h3><pre><code class="tsx">npm install hexo-deployer-git --save</code></pre><h3 id="修改-config-yml的部署設定"><a href="#修改-config-yml的部署設定" class="headerlink" title="修改_config.yml的部署設定"></a>修改_config.yml的部署設定</h3><pre><code class="tsx">deploy:  type: git  repo: https://github.com/username/username.github.io.git  branch: master</code></pre><h3 id="輸入部署指令"><a href="#輸入部署指令" class="headerlink" title="輸入部署指令"></a>輸入部署指令</h3><pre><code class="tsx">hexo deploy</code></pre><h2 id="Demo畫面"><a href="#Demo畫面" class="headerlink" title="[Demo畫面]"></a>[Demo畫面]</h2><p><img src="/images/20220823/04.jpg" alt="04.png"></p><p>下一篇會介紹安裝主題的部分</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;這篇文章主要記錄架設Hexo網誌並且快速部署到Githug的過程&lt;/p&gt;
&lt;p&gt;從安裝、建立環境，以及hexo的一些常用指令&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://charliee2000.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] How to add read more link in hexo blog</title>
    <link href="https://charliee2000.github.io/2022/08/23/20220823/"/>
    <id>https://charliee2000.github.io/2022/08/23/20220823/</id>
    <published>2022-08-23T08:12:19.000Z</published>
    <updated>2022-09-02T07:03:32.952Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo使用的主題通常會在<code>&lt;!--more--&gt;</code>的斷點生成一個Read more的連結按鈕</p><p>但我這邊使用的<a href="https://github.com/lh1me/hexo-theme-aomori/releases">Aomori</a>並不支援直接增加Read more的連結</p><p>網路上查找之後發現沒有找到類似的外掛或是解法</p><p>所以後來直接在原始碼中做處理</p><br><span id="more"></span><p>以下為Aomori的themes的資料夾結構</p><h3 id="themes資料夾結構"><a href="#themes資料夾結構" class="headerlink" title="[themes資料夾結構]"></a>[themes資料夾結構]</h3><pre><code>├── CHANGELOG.md├── LICENSE├── README.md├── docs├── languages├── layout│   ├── _partial│   │   ├── article-index.ejs│   │   ├── page│   │   ├── post│   ├── _widget├── source│   ├── dist│   ├── javascripts│   ├── modules│   └── stylesheets└── stylelint.config.js</code></pre><p>找到article-index.ejs這個ejs, 透過編輯器打開之後可以看到</p><h3 id="修改前的source"><a href="#修改前的source" class="headerlink" title="[修改前的source]"></a>[修改前的source]</h3><pre><code class="html">...&lt;div class=&quot;article-body&quot;&gt;    &lt;header class=&quot;article-title&quot;&gt;        &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;&quot;&gt;&lt;%= post.title %&gt;&lt;/a&gt;    &lt;/header&gt;    &lt;div class=&quot;article-entry post-inner-html&quot;&gt;        &lt;% if (post.excerpt)&#123; %&gt;        &lt;%- post.excerpt %&gt;        &lt;% &#125; else &#123; %&gt;        &lt;%- post.content %&gt;        &lt;% &#125; %&gt;    &lt;/div&gt;&lt;/div&gt;...</code></pre><p><code>post.excerpt</code> 指的是文章的摘要內容，也就是<code>&lt;!--more--&gt;</code>截斷之前的內容</p><p>所以我在後面加入一行Read more的連結</p><pre><code class="html">&lt;a href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;div style=&quot;text-align: right;&quot;&gt;Read more ➜&lt;/div&gt;&lt;/a&gt;</code></pre><p><code>url_for()</code> 返回一個root的相對路徑Url</p><p><code>post.path</code> 該篇文章的連結</p><p>加好之後</p><h3 id="修改後的source"><a href="#修改後的source" class="headerlink" title="[修改後的source]"></a>[修改後的source]</h3><pre><code class="html">...&lt;div class=&quot;article-body&quot;&gt;    &lt;header class=&quot;article-title&quot;&gt;        &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;&quot;&gt;&lt;%= post.title %&gt;&lt;/a&gt;    &lt;/header&gt;    &lt;div class=&quot;article-entry post-inner-html&quot;&gt;        &lt;% if (post.excerpt)&#123; %&gt;        &lt;%- post.excerpt %&gt;        &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;div style=&quot;text-align: right;&quot;&gt;Read more ➜&lt;/div&gt;&lt;/a&gt;        &lt;% &#125; else &#123; %&gt;        &lt;%- post.content %&gt;        &lt;% &#125; %&gt;    &lt;/div&gt;&lt;/div&gt;...</code></pre><h3 id="Demo畫面"><a href="#Demo畫面" class="headerlink" title="[Demo畫面]"></a>[Demo畫面]</h3><p><img src="/images/20220823/01.png" alt="Untitled"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hexo使用的主題通常會在&lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;的斷點生成一個Read more的連結按鈕&lt;/p&gt;
&lt;p&gt;但我這邊使用的&lt;a href=&quot;https://github.com/lh1me/hexo-theme-aomori/releases&quot;&gt;Aomori&lt;/a&gt;並不支援直接增加Read more的連結&lt;/p&gt;
&lt;p&gt;網路上查找之後發現沒有找到類似的外掛或是解法&lt;/p&gt;
&lt;p&gt;所以後來直接在原始碼中做處理&lt;/p&gt;
&lt;br&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://charliee2000.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://charliee2000.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>[Test] Test page</title>
    <link href="https://charliee2000.github.io/2022/08/23/Test-page/"/>
    <id>https://charliee2000.github.io/2022/08/23/Test-page/</id>
    <published>2022-08-23T05:35:53.000Z</published>
    <updated>2022-09-05T08:59:02.198Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Test01"><a href="#Test01" class="headerlink" title="Test01"></a>Test01</h2><p>Qui cupidatat reprehenderit, consequat qui consequat. Consequat qui consequat ipsum veniam fugiat commodo. Consequat ipsum veniam fugiat. Veniam fugiat commodo excepteur irure. Commodo excepteur irure exercitation, do consectetur ex. Exercitation do consectetur ex. Consectetur ex sed elit fugiat. Sed elit fugiat excepteur, enim.</p><p>Esse veniam, excepteur elit. Elit elit reprehenderit, nulla. Nulla deserunt, aliqua non. Non aute aliquip minim velit et. Aliquip minim velit et quis. Velit, et quis magna in anim enim. Magna in anim enim, reprehenderit voluptate incididunt reprehenderit.</p><p>Proident laboris anim cupidatat, velit. Cupidatat velit et fugiat culpa, non. Fugiat culpa non ex cupidatat sint, officia. Ex cupidatat sint officia reprehenderit laborum, occaecat excepteur. Officia reprehenderit laborum occaecat. Laborum occaecat excepteur exercitation dolore esse cupidatat consequat. Excepteur exercitation dolore esse cupidatat, consequat. Esse, cupidatat consequat occaecat.</p><h3 id="Test001"><a href="#Test001" class="headerlink" title="Test001"></a>Test001</h3><p>Laboris anim cupidatat velit et fugiat, culpa non. Velit et fugiat culpa, non ex. Culpa non ex cupidatat sint, officia. Cupidatat, sint officia reprehenderit laborum occaecat. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore. Exercitation dolore esse, cupidatat consequat. Cupidatat consequat occaecat cillum incididunt enim veniam. Occaecat, cillum incididunt enim veniam proident sit magna. Enim veniam, proident sit magna anim veniam.</p><span id="more"></span><p>Anim cupidatat velit et fugiat culpa non. Velit et fugiat culpa, non ex. Culpa non ex cupidatat sint, officia. Cupidatat, sint officia reprehenderit laborum occaecat. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore.</p><p>Cupidatat velit et fugiat culpa, non. Fugiat culpa non ex cupidatat sint, officia. Ex cupidatat sint officia reprehenderit laborum, occaecat excepteur. Officia reprehenderit laborum occaecat. Laborum occaecat excepteur exercitation dolore esse cupidatat consequat. Excepteur exercitation dolore esse cupidatat, consequat. Esse, cupidatat consequat occaecat. Occaecat, cillum incididunt enim veniam proident sit magna.</p><p>Velit et fugiat culpa, non ex. Culpa non ex cupidatat sint, officia. Cupidatat, sint officia reprehenderit laborum occaecat. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore. Exercitation dolore esse, cupidatat consequat. Cupidatat consequat occaecat cillum incididunt enim veniam.</p><p>Et fugiat, culpa non ex cupidatat sint officia. Non ex cupidatat sint officia reprehenderit, laborum. Sint officia reprehenderit laborum occaecat excepteur exercitation dolore. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore. Exercitation dolore esse, cupidatat consequat. Cupidatat consequat occaecat cillum incididunt enim veniam. Occaecat, cillum incididunt enim veniam proident sit magna.</p><p>Fugiat culpa non ex cupidatat sint, officia. Ex cupidatat sint officia reprehenderit laborum, occaecat excepteur. Officia reprehenderit laborum occaecat. Laborum occaecat excepteur exercitation dolore esse cupidatat consequat. Excepteur exercitation dolore esse cupidatat, consequat. Esse, cupidatat consequat occaecat. Occaecat, cillum incididunt enim veniam proident sit magna. Enim veniam, proident sit magna anim veniam.</p><p>Culpa non ex cupidatat sint, officia. Cupidatat, sint officia reprehenderit laborum occaecat. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore. Exercitation dolore esse, cupidatat consequat. Cupidatat consequat occaecat cillum incididunt enim veniam. Occaecat, cillum incididunt enim veniam proident sit magna. Enim veniam, proident sit magna anim veniam.</p><p>Non ex cupidatat sint officia reprehenderit, laborum. Sint officia reprehenderit laborum occaecat excepteur exercitation dolore. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore. Exercitation dolore esse, cupidatat consequat. Cupidatat consequat occaecat cillum incididunt enim veniam. Occaecat, cillum incididunt enim veniam proident sit magna. Enim veniam, proident sit magna anim veniam. Sit magna anim veniam esse commodo aliqua in. Anim veniam esse commodo aliqua in, ut aute.</p><p>Ex cupidatat sint officia reprehenderit laborum, occaecat excepteur. Officia reprehenderit laborum occaecat. Laborum occaecat excepteur exercitation dolore esse cupidatat consequat. Excepteur exercitation dolore esse cupidatat, consequat. Esse, cupidatat consequat occaecat. Occaecat, cillum incididunt enim veniam proident sit magna. Enim veniam, proident sit magna anim veniam. Sit magna anim veniam esse commodo aliqua in. Anim veniam esse commodo aliqua in, ut aute. Commodo aliqua in ut aute.</p><h2 id="Test02"><a href="#Test02" class="headerlink" title="Test02"></a>Test02</h2><p>In adipiscing, cupidatat laborum. Laborum in fugiat cupidatat voluptate voluptate occaecat. Fugiat, cupidatat voluptate voluptate. Voluptate occaecat, duis do anim sunt qui. Do anim sunt qui dolore anim, ullamco enim.</p><p>Adipiscing cupidatat laborum in. Laborum in fugiat cupidatat voluptate voluptate occaecat. Fugiat, cupidatat voluptate voluptate. Voluptate occaecat, duis do anim sunt qui. Do anim sunt qui dolore anim, ullamco enim. Qui dolore anim ullamco enim qui. Anim ullamco enim qui tempor.</p><h3 id="Test002"><a href="#Test002" class="headerlink" title="Test002"></a>Test002</h3><p>Cupidatat laborum in fugiat cupidatat voluptate voluptate occaecat. In fugiat cupidatat voluptate voluptate occaecat. Cupidatat voluptate voluptate occaecat duis do. Voluptate occaecat, duis do anim sunt qui. Do anim sunt qui dolore anim, ullamco enim. Qui dolore anim ullamco enim qui.</p><p>Laborum in fugiat cupidatat voluptate voluptate occaecat. Fugiat, cupidatat voluptate voluptate. Voluptate occaecat, duis do anim sunt qui. Do anim sunt qui dolore anim, ullamco enim. Qui dolore anim ullamco enim qui. Anim ullamco enim qui tempor. Enim qui tempor adipiscing magna incididunt tempor reprehenderit. Tempor adipiscing magna incididunt tempor reprehenderit. Magna incididunt, tempor reprehenderit quis consequat.</p><p>In fugiat cupidatat voluptate voluptate occaecat. Cupidatat voluptate voluptate occaecat duis do. Voluptate occaecat, duis do anim sunt qui. Do anim sunt qui dolore anim, ullamco enim. Qui dolore anim ullamco enim qui.</p><h2 id="Test03"><a href="#Test03" class="headerlink" title="Test03"></a>Test03</h2><p>Proident, enim mollit velit. Velit esse reprehenderit ea. Reprehenderit ea nisi elit veniam ea. Nisi elit veniam ea ea amet commodo. Veniam, ea ea amet commodo duis. Amet commodo duis id labore. Duis id labore enim nisi tempor. Labore enim nisi tempor ad aute.</p><p>Enim ut ea velit, voluptate. Velit voluptate et aliqua incididunt. Et aliqua incididunt aute non est cillum. Incididunt aute non est cillum culpa. Non est cillum, culpa commodo in. Culpa commodo in eu esse ea veniam. In eu, esse ea. Ea veniam ut in.</p><p>Ut ea, velit voluptate et aliqua. Voluptate et aliqua incididunt, aute non est cillum. Incididunt aute non est cillum culpa. Non est cillum, culpa commodo in. Culpa commodo in eu esse ea veniam.</p><p>Ea velit voluptate et aliqua, incididunt. Et aliqua incididunt aute non est cillum. Incididunt aute non est cillum culpa. Non est cillum, culpa commodo in. Culpa commodo in eu esse ea veniam. In eu, esse ea. Ea veniam ut in. Ut in dolore nulla aliqua pariatur sed anim.</p><p>Velit voluptate et aliqua incididunt. Et aliqua incididunt aute non est cillum. Incididunt aute non est cillum culpa. Non est cillum, culpa commodo in. Culpa commodo in eu esse ea veniam. In eu, esse ea. Ea veniam ut in. Ut in dolore nulla aliqua pariatur sed anim. Dolore nulla aliqua pariatur, sed anim minim. Pariatur sed anim, minim officia enim.</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Test01&quot;&gt;&lt;a href=&quot;#Test01&quot; class=&quot;headerlink&quot; title=&quot;Test01&quot;&gt;&lt;/a&gt;Test01&lt;/h2&gt;&lt;p&gt;Qui cupidatat reprehenderit, consequat qui consequat. Consequat qui consequat ipsum veniam fugiat commodo. Consequat ipsum veniam fugiat. Veniam fugiat commodo excepteur irure. Commodo excepteur irure exercitation, do consectetur ex. Exercitation do consectetur ex. Consectetur ex sed elit fugiat. Sed elit fugiat excepteur, enim.&lt;/p&gt;
&lt;p&gt;Esse veniam, excepteur elit. Elit elit reprehenderit, nulla. Nulla deserunt, aliqua non. Non aute aliquip minim velit et. Aliquip minim velit et quis. Velit, et quis magna in anim enim. Magna in anim enim, reprehenderit voluptate incididunt reprehenderit.&lt;/p&gt;
&lt;p&gt;Proident laboris anim cupidatat, velit. Cupidatat velit et fugiat culpa, non. Fugiat culpa non ex cupidatat sint, officia. Ex cupidatat sint officia reprehenderit laborum, occaecat excepteur. Officia reprehenderit laborum occaecat. Laborum occaecat excepteur exercitation dolore esse cupidatat consequat. Excepteur exercitation dolore esse cupidatat, consequat. Esse, cupidatat consequat occaecat.&lt;/p&gt;
&lt;h3 id=&quot;Test001&quot;&gt;&lt;a href=&quot;#Test001&quot; class=&quot;headerlink&quot; title=&quot;Test001&quot;&gt;&lt;/a&gt;Test001&lt;/h3&gt;&lt;p&gt;Laboris anim cupidatat velit et fugiat, culpa non. Velit et fugiat culpa, non ex. Culpa non ex cupidatat sint, officia. Cupidatat, sint officia reprehenderit laborum occaecat. Reprehenderit laborum occaecat excepteur exercitation dolore. Occaecat excepteur exercitation dolore. Exercitation dolore esse, cupidatat consequat. Cupidatat consequat occaecat cillum incididunt enim veniam. Occaecat, cillum incididunt enim veniam proident sit magna. Enim veniam, proident sit magna anim veniam.&lt;/p&gt;</summary>
    
    
    
    <category term="test" scheme="https://charliee2000.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://charliee2000.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>test02</title>
    <link href="https://charliee2000.github.io/2021/09/05/test02/"/>
    <id>https://charliee2000.github.io/2021/09/05/test02/</id>
    <published>2021-09-05T08:59:26.000Z</published>
    <updated>2022-09-05T09:00:01.982Z</updated>
    
    <content type="html"><![CDATA[<p>Incididunt, aute laborum anim. Anim incididunt proident reprehenderit ipsum laborum aliquip quis. Proident reprehenderit ipsum laborum. Ipsum laborum aliquip quis. Aliquip quis nulla irure sed ipsum eu reprehenderit. Nulla irure sed ipsum eu reprehenderit et, ullamco. Ipsum eu reprehenderit, et ullamco. Et ullamco, aliqua labore incididunt. Labore incididunt qui qui sit. Qui qui sit do.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Incididunt, aute laborum anim. Anim incididunt proident reprehenderit ipsum laborum aliquip quis. Proident reprehenderit ipsum laborum. I</summary>
      
    
    
    
    <category term="test" scheme="https://charliee2000.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://charliee2000.github.io/tags/test/"/>
    
  </entry>
  
</feed>
